1cbf3028411754a9aecc3786b9308355
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
require("expect-even-more-jest");
var filesystem_sandbox_1 = require("filesystem-sandbox");
var repository_1 = require("./repository");
var path = __importStar(require("path"));
describe("test repository wrapper", function () {
    it("should be able to init", function () { return __awaiter(void 0, void 0, void 0, function () {
        var sandbox, dir, repo;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    sandbox = new filesystem_sandbox_1.Sandbox();
                    return [4 /*yield*/, sandbox.mkdir("origin")];
                case 1:
                    dir = _a.sent(), repo = new repository_1.Repository(dir);
                    // Act
                    return [4 /*yield*/, repo.init()];
                case 2:
                    // Act
                    _a.sent();
                    // Assert
                    expect(path.join(dir, ".git"))
                        .toBeFolder();
                    return [2 /*return*/];
            }
        });
    }); });
    it("should be able to add and commit", function () { return __awaiter(void 0, void 0, void 0, function () {
        var sandbox, dir, commitMessage, repo, beforeCommit, result, logResult;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    sandbox = new filesystem_sandbox_1.Sandbox();
                    return [4 /*yield*/, sandbox.mkdir("origin")];
                case 1:
                    dir = _a.sent(), commitMessage = ":memo: add doc", repo = new repository_1.Repository(dir);
                    // Act
                    return [4 /*yield*/, repo.init()];
                case 2:
                    // Act
                    _a.sent();
                    return [4 /*yield*/, sandbox.writeFile("origin/readme.md", "# This is the readme")];
                case 3:
                    _a.sent();
                    return [4 /*yield*/, repo.addAll()];
                case 4:
                    _a.sent();
                    return [4 /*yield*/, repo.status()];
                case 5:
                    beforeCommit = _a.sent();
                    expect(beforeCommit.files)
                        .toContainEqual(expect.objectContaining({
                        path: "readme.md"
                    }));
                    return [4 /*yield*/, repo.commit(commitMessage)];
                case 6:
                    _a.sent();
                    return [4 /*yield*/, repo.status()];
                case 7:
                    result = _a.sent();
                    expect(result.files)
                        .toBeEmptyArray();
                    return [4 /*yield*/, repo.log({})];
                case 8:
                    logResult = _a.sent();
                    expect(logResult.all)
                        .toHaveLength(1);
                    expect(logResult.latest)
                        .toEqual(expect.objectContaining({
                        message: commitMessage
                    }));
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXGNvZGVcXG9wZW5zb3VyY2VcXGdpdC1icm9hZGNhc3RcXHRlc3RzXFxyZXBvc2l0b3J5LnNwZWMudHMiLCJzb3VyY2VzIjpbIkM6XFxjb2RlXFxvcGVuc291cmNlXFxnaXQtYnJvYWRjYXN0XFx0ZXN0c1xccmVwb3NpdG9yeS5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlDQUErQjtBQUMvQix5REFBNkM7QUFDN0MsMkNBQTBDO0FBQzFDLHlDQUE2QjtBQUU3QixRQUFRLENBQUMseUJBQXlCLEVBQUU7SUFDaEMsRUFBRSxDQUFDLHdCQUF3QixFQUFFOzs7OztvQkFHckIsT0FBTyxHQUFHLElBQUksNEJBQU8sRUFBRTtvQkFDakIscUJBQU0sT0FBTyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBQTs7b0JBQW5DLEdBQUcsR0FBRyxTQUE2QixFQUNuQyxJQUFJLEdBQUcsSUFBSSx1QkFBVSxDQUFDLEdBQUcsQ0FBQztvQkFDOUIsTUFBTTtvQkFDTixxQkFBTSxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUE7O29CQURqQixNQUFNO29CQUNOLFNBQWlCLENBQUM7b0JBQ2xCLFNBQVM7b0JBQ1QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO3lCQUN6QixVQUFVLEVBQUUsQ0FBQTs7OztTQUNwQixDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsa0NBQWtDLEVBQUU7Ozs7O29CQUcvQixPQUFPLEdBQUcsSUFBSSw0QkFBTyxFQUFFO29CQUNqQixxQkFBTSxPQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFBOztvQkFBbkMsR0FBRyxHQUFHLFNBQTZCLEVBQ25DLGFBQWEsR0FBRyxnQkFBZ0IsRUFDaEMsSUFBSSxHQUFHLElBQUksdUJBQVUsQ0FBQyxHQUFHLENBQUM7b0JBQzlCLE1BQU07b0JBQ04scUJBQU0sSUFBSSxDQUFDLElBQUksRUFBRSxFQUFBOztvQkFEakIsTUFBTTtvQkFDTixTQUFpQixDQUFDO29CQUNsQixxQkFBTSxPQUFPLENBQUMsU0FBUyxDQUFDLGtCQUFrQixFQUFFLHNCQUFzQixDQUFDLEVBQUE7O29CQUFuRSxTQUFtRSxDQUFDO29CQUNwRSxxQkFBTSxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUE7O29CQUFuQixTQUFtQixDQUFDO29CQUNDLHFCQUFNLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBQTs7b0JBQWxDLFlBQVksR0FBRyxTQUFtQjtvQkFDeEMsTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUM7eUJBQ3JCLGNBQWMsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7d0JBQ3BDLElBQUksRUFBRSxXQUFXO3FCQUNwQixDQUFDLENBQUMsQ0FBQztvQkFDUixxQkFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFBOztvQkFBaEMsU0FBZ0MsQ0FBQztvQkFHbEIscUJBQU0sSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFBOztvQkFBNUIsTUFBTSxHQUFHLFNBQW1CO29CQUNsQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQzt5QkFDZixjQUFjLEVBQUUsQ0FBQztvQkFDSixxQkFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBRWhDLENBQUMsRUFBQTs7b0JBRkksU0FBUyxHQUFHLFNBRWhCO29CQUNGLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDO3lCQUNoQixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3JCLE1BQU0sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDO3lCQUNuQixPQUFPLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDO3dCQUM3QixPQUFPLEVBQUUsYUFBYTtxQkFDekIsQ0FBQyxDQUFDLENBQUM7Ozs7U0FDWCxDQUFDLENBQUM7QUFDUCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcImV4cGVjdC1ldmVuLW1vcmUtamVzdFwiO1xyXG5pbXBvcnQgeyBTYW5kYm94IH0gZnJvbSBcImZpbGVzeXN0ZW0tc2FuZGJveFwiO1xyXG5pbXBvcnQgeyBSZXBvc2l0b3J5IH0gZnJvbSBcIi4vcmVwb3NpdG9yeVwiO1xyXG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gXCJwYXRoXCI7XHJcblxyXG5kZXNjcmliZShgdGVzdCByZXBvc2l0b3J5IHdyYXBwZXJgLCAoKSA9PiB7XHJcbiAgICBpdChgc2hvdWxkIGJlIGFibGUgdG8gaW5pdGAsIGFzeW5jICgpID0+IHtcclxuICAgICAgICAvLyBBcnJhbmdlXHJcbiAgICAgICAgY29uc3RcclxuICAgICAgICAgICAgc2FuZGJveCA9IG5ldyBTYW5kYm94KCksXHJcbiAgICAgICAgICAgIGRpciA9IGF3YWl0IHNhbmRib3gubWtkaXIoXCJvcmlnaW5cIiksXHJcbiAgICAgICAgICAgIHJlcG8gPSBuZXcgUmVwb3NpdG9yeShkaXIpO1xyXG4gICAgICAgIC8vIEFjdFxyXG4gICAgICAgIGF3YWl0IHJlcG8uaW5pdCgpO1xyXG4gICAgICAgIC8vIEFzc2VydFxyXG4gICAgICAgIGV4cGVjdChwYXRoLmpvaW4oZGlyLCBcIi5naXRcIikpXHJcbiAgICAgICAgICAgIC50b0JlRm9sZGVyKClcclxuICAgIH0pO1xyXG5cclxuICAgIGl0KGBzaG91bGQgYmUgYWJsZSB0byBhZGQgYW5kIGNvbW1pdGAsIGFzeW5jICgpID0+IHtcclxuICAgICAgICAvLyBBcnJhbmdlXHJcbiAgICAgICAgY29uc3RcclxuICAgICAgICAgICAgc2FuZGJveCA9IG5ldyBTYW5kYm94KCksXHJcbiAgICAgICAgICAgIGRpciA9IGF3YWl0IHNhbmRib3gubWtkaXIoXCJvcmlnaW5cIiksXHJcbiAgICAgICAgICAgIGNvbW1pdE1lc3NhZ2UgPSBcIjptZW1vOiBhZGQgZG9jXCIsXHJcbiAgICAgICAgICAgIHJlcG8gPSBuZXcgUmVwb3NpdG9yeShkaXIpXHJcbiAgICAgICAgLy8gQWN0XHJcbiAgICAgICAgYXdhaXQgcmVwby5pbml0KCk7XHJcbiAgICAgICAgYXdhaXQgc2FuZGJveC53cml0ZUZpbGUoXCJvcmlnaW4vcmVhZG1lLm1kXCIsIFwiIyBUaGlzIGlzIHRoZSByZWFkbWVcIik7XHJcbiAgICAgICAgYXdhaXQgcmVwby5hZGRBbGwoKTtcclxuICAgICAgICBjb25zdCBiZWZvcmVDb21taXQgPSBhd2FpdCByZXBvLnN0YXR1cygpO1xyXG4gICAgICAgIGV4cGVjdChiZWZvcmVDb21taXQuZmlsZXMpXHJcbiAgICAgICAgICAgIC50b0NvbnRhaW5FcXVhbChleHBlY3Qub2JqZWN0Q29udGFpbmluZyh7XHJcbiAgICAgICAgICAgICAgICBwYXRoOiBcInJlYWRtZS5tZFwiXHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICBhd2FpdCByZXBvLmNvbW1pdChjb21taXRNZXNzYWdlKTtcclxuXHJcbiAgICAgICAgLy8gQXNzZXJ0XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVwby5zdGF0dXMoKTtcclxuICAgICAgICBleHBlY3QocmVzdWx0LmZpbGVzKVxyXG4gICAgICAgICAgICAudG9CZUVtcHR5QXJyYXkoKTtcclxuICAgICAgICBjb25zdCBsb2dSZXN1bHQgPSBhd2FpdCByZXBvLmxvZyh7XHJcblxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGV4cGVjdChsb2dSZXN1bHQuYWxsKVxyXG4gICAgICAgICAgICAudG9IYXZlTGVuZ3RoKDEpO1xyXG4gICAgICAgIGV4cGVjdChsb2dSZXN1bHQubGF0ZXN0KVxyXG4gICAgICAgICAgICAudG9FcXVhbChleHBlY3Qub2JqZWN0Q29udGFpbmluZyh7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBjb21taXRNZXNzYWdlXHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgIH0pO1xyXG59KTtcclxuIl19